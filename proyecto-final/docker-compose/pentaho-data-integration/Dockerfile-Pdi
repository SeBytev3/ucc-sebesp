# Base image
FROM ubuntu:20.04

# Set environment variables
ENV JAVA_HOME=/usr/local/openjdk-11 \
    PATH=/usr/local/openjdk-11/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \
    LANG=C.UTF-8 \
    JAVA_VERSION=11.0.16 \
    DISPLAY=host.docker.internal:0.0 \
    DEBIAN_FRONTEND=noninteractive

# Install basic dependencies
RUN set -eux; \
    echo "deb http://cz.archive.ubuntu.com/ubuntu bionic main universe" > /etc/apt/sources.list.d/bionic.list; \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        ca-certificates \
        curl \
        netbase \
        wget \
        gnupg \
        dirmngr \
        git \
        mercurial \
        openssh-client \
        subversion \
        procps \
        bzip2 \
        unzip \
        xz-utils \
        fontconfig \
        libfreetype6 \
        p11-kit \
        libwebkitgtk-1.0-0 \
        libxtst6 \
        libxrender1 \
        libxi6 \
        lsb-release \
        lsb-core \
        tzdata && \
    rm -rf /var/lib/apt/lists/* && \
    rm /etc/apt/sources.list.d/bionic.list

# Set timezone to avoid interactive prompt
RUN ln -fs /usr/share/zoneinfo/Etc/UTC /etc/localtime && \
    dpkg-reconfigure --frontend noninteractive tzdata

# Install OpenJDK 11
RUN set -eux; \
    arch="$(dpkg --print-architecture)"; \
    case "$arch" in \
        'amd64') downloadUrl='https://github.com/AdoptOpenJDK/openjdk11-upstream-binaries/releases/download/jdk-11.0.16%2B8/OpenJDK11U-jdk_x64_linux_11.0.16_8.tar.gz'; ;; \
        'arm64') downloadUrl='https://github.com/AdoptOpenJDK/openjdk11-upstream-binaries/releases/download/jdk-11.0.16%2B8/OpenJDK11U-jdk_aarch64_linux_11.0.16_8.tar.gz'; ;; \
        *) echo >&2 "error: unsupported architecture: '$arch'"; exit 1 ;; \
    esac; \
    wget -O openjdk.tgz "$downloadUrl"; \
    wget -O openjdk.tgz.asc "$downloadUrl.sign"; \
    export GNUPGHOME="$(mktemp -d)"; \
    gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 238F481BA3221506AD1937B4CB26ABC29FF32E37; \
    gpg --batch --verify openjdk.tgz.asc openjdk.tgz; \
    rm -rf "$GNUPGHOME"; \
    mkdir -p "$JAVA_HOME"; \
    tar --extract --file openjdk.tgz --directory "$JAVA_HOME" --strip-components 1; \
    rm openjdk.tgz*; \
    echo "System.out.println(System.getProperty(\"file.encoding\"));" | jshell -s | grep 'UTF-8'; \
    javac --version; \
    java --version

# Configure Pentaho tools
COPY pdi-ce-10.2.0.0-222/data-integration /opt/pentaho/client-tools/data-integration
RUN chmod 775 /opt/pentaho/client-tools/data-integration/*.sh && \
    echo '#!/bin/bash\n/opt/pentaho/client-tools/data-integration/pan.sh "$@"' > /usr/bin/pan && chmod +x /usr/bin/pan && \
    echo '#!/bin/bash\n/opt/pentaho/client-tools/data-integration/kitchen.sh "$@"' > /usr/bin/kitchen && chmod +x /usr/bin/kitchen && \
    echo '#!/bin/bash\n/opt/pentaho/client-tools/data-integration/spoon.sh "$@"' > /usr/bin/spoon && chmod +x /usr/bin/spoon

# Copy transformation file
COPY Transformation-pg-a-orcl.ktr /home/Transformation-pg-a-orcl.ktr

# Copy and set permissions for the run script
COPY run-pdi-spoon+transformation.sh /usr/local/bin/run-pdi-spoon+transformation.sh
RUN chmod +x /usr/local/bin/run-pdi-spoon+transformation.sh

# Download additional JDBC drivers
RUN wget -O /opt/pentaho/client-tools/data-integration/lib/postgresql-42.7.4.jar https://jdbc.postgresql.org/download/postgresql-42.7.4.jar && \
    wget -O /opt/pentaho/client-tools/data-integration/lib/ojdbc8.jar https://download.oracle.com/otn-pub/otn_software/jdbc/236/ojdbc8.jar

# Default command
CMD ["bash"]